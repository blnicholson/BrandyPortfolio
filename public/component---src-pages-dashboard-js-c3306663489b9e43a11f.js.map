{"version":3,"sources":["webpack:///./src/components/date.js","webpack:///./src/components/fullCalendarDash.js","webpack:///./src/components/leftNavDash.js","webpack:///./src/components/podcastItem.js","webpack:///./src/components/podcasts.js","webpack:///./src/components/podcastCard.js","webpack:///./src/components/wakatime.js","webpack:///./src/components/weatherDash.js","webpack:///./src/components/youtube.js","webpack:///./src/components/youtubeLayout.js","webpack:///./src/components/audioCard.js","webpack:///./src/components/myPods/bigweb.js","webpack:///./src/components/dashboard.js","webpack:///./src/pages/dashboard.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TimeContainer","_this","_Component","call","this","d","Date","state","day","getDay","month","getMonth","date","getDate","year","getFullYear","time","toLocaleTimeString","countingSecond","bind","assertThisInitialized_default","setState","componentWillMount","setInterval","render","react_default","a","createElement","className","id","Component","moment","locale","localizer","momentLocalizer","BigCalendar","events","start","end","title","react_big_calendar_esm","defaultDate","views","style","height","DashboardMainMenu","gatsby_browser_entry","to","index_es","icon","size","color","PodcastItem","props","src","image","alt","class","onClick","playPodcast","value","Podcasts","channels","PodcastList","currentPage","channelsPerPage","handleClick","console","log","event","Number","target","_this2","_this$state","indexOfLastChannel","indexOfFirstChannel","renderChannels","slice","map","channel","index","components_podcastItem","key","name","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","PodcastCard","components_podcasts","WakaTimeWebPart","query","data","width","hspace","thirdPartyWakatime","categories","text","Moment","best_day","format","editors","languages","language","dist_default","percent","randomColor","luminosity","count","lineWidth","totalValue","label","_ref","dataIndex","percentage","toFixed","labelPosition","labelStyle","fontSize","fontFamily","background","_2664006720","WeatherDash","components_date","openWeather","city","list","weather","round","main","temp","temp_min","temp_max","description","_530387871","Player","videoReady","pauseVideo","videoId","YouTube","opts","playerVars","autoplay","onReady","React","YoutubeLayout","dist_index_es","naturalSlideWidth","naturalSlideHeight","totalSlides","allYoutubeVideo","edges","edge","youtube","node","_3214634025","PodcastAudioCard","audiocard_esm","art","source","skipBackSeconds","skipForwardSeconds","progressBarBackground","progressBarCompleteBackground","BigWeb","allBigWeb","nodes","episodes","episode","audioCard","thumbnail","audio","backgroundColor","border","closePlayer","_2563827144","DashboardLayout","isDashboardShowing","isBigWeb","isPodcast1Showing","isPodcast2Showing","isPodcast3Showing","isPodcast4Showing","isPodcast5Showing","isPodcast6Showing","isPodcast7Showing","isPodcast8Showing","isPodcast9Showing","isPodcast10Showing","isPodcast11Showing","isPodcast12Showing","isPodcast13Showing","isPodcast14Showing","isPodcast15Showing","isBigWebShowing","isPodcast0Showing","components_leftNavDash","components_fullCalendarDash","components_podcastCard","bigweb","components_youtubeLayout","components_wakatime","components_weatherDash","Dashboard","components_dashboard","__webpack_require__","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"sJAgEeA,sBA1Db,SAAAA,IAAc,IAAAC,EACZA,EAAAC,EAAAC,KAAAC,YACA,IAAIC,EAAI,IAAIC,KAFA,OAGZL,EAAKM,MAAQ,CACXC,IAAKH,EAAEI,SACPC,MAAOL,EAAEM,WACTC,KAAMP,EAAEQ,UACRC,KAAMT,EAAEU,cACRC,KAAMX,EAAEY,sBAEVhB,EAAKiB,eAAiBjB,EAAKiB,eAAeC,KAApBC,IAAAnB,IAVVA,sCAYdiB,eAAA,WACE,IAAIb,EAAI,IAAIC,KACZF,KAAKiB,SAAS,CACZb,IAAKH,EAAEI,SACPC,MAAOL,EAAEM,WACTC,KAAMP,EAAEQ,UACRC,KAAMT,EAAEU,cACRC,KAAMX,EAAEY,0BAGZK,mBAAA,WACEC,YAAYnB,KAAKc,eAAgB,QAEnCM,OAAA,WAuBE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OAAOC,GAAK,YACvBJ,EAAAC,EAAAC,cAAA,KAAGE,GAAG,YAAYD,UAAU,yFAXvB,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAIgIxB,KAAKG,MAAMC,KAArI,IAA4I,IAxBrI,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,WACA,YAccJ,KAAKG,MAAMG,OADnB,IAC4BN,KAAKG,MAAMK,MACvCa,EAAAC,EAAAC,cAAA,KAAGE,GAAG,aAAaD,UAAU,qEAA7B,IAAmGxB,KAAKG,MAAMS,WArD9Fc,uDCE5BC,IAAOC,OAAQ,QACf,IAAMC,EAAYC,YAAgBH,KA4BnBI,sJAzBb5B,MAAQ,CACN6B,OAAQ,CACN,CACEC,MAAO,GACPC,IAAK,GACLC,MAAO,oCAKbf,OAAA,WACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEP,UAAWA,EACXQ,YAAa,IAAInC,KACjBoC,MAAO,CAAChC,OAAM,GACd0B,OAAQhC,KAAKG,MAAM6B,OACnBO,MAAO,CAAEC,OAAQ,eAnBDd,+BCsDXe,UA3DW,kBACxBpB,EAAAC,EAAAC,cAAA,SACEE,GAAG,kBACHD,UAAU,QAEVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACdH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,SACPtB,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACZH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,YAAaC,KAAM,KAAMC,MAAO,eAIzD1B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,aACXtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,UAAWC,KAAM,KAAMC,MAAO,eAIzD1B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,YACTtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,QAASC,KAAM,KAAMC,MAAO,eAIvD1B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,YACTtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,iBAAkBC,KAAM,KAAMC,MAAO,eAIhE1B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,aACTtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,eAAgBC,KAAM,KAAMC,MAAO,eAI9D1B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,aACTtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,OAAQC,KAAM,KAAMC,MAAO,eAItD1B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,GAAG,UACTtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,QAASC,KAAM,KAAMC,MAAO,mBClC9CC,wBAlBK,SAAAC,GAAK,OACvB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB0B,IAAKD,EAAME,MAAOC,IAAKH,EAAMG,MAC5D/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAK8B,MAAM,gBACThC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,KAAM,cACNC,KAAM,KACNC,MAAO,QACPO,QAAS,kBAAML,EAAMM,YAAYN,EAAMxB,KACvC+B,MAAOP,EAAMxB,oBCmEVgC,sBA1Eb,SAAAA,IAAc,IAAA5D,EAAA,OACZA,EAAAC,EAAAC,KAAAC,aACKG,MAAQ,CACXuD,SAAUC,EACVC,YAAa,EACbC,gBAAiB,GAGnBhE,EAAKiE,YAAcjE,EAAKiE,YAAY/C,KAAjBC,IAAAnB,IACnBkE,QAAQC,IAAIL,GACZI,QAAQC,IAAIL,EAAY,GAAGlC,IAVf5B,sCAadiE,YAAA,SAAYG,GACVjE,KAAKiB,SAAS,CACZ2C,YAAaM,OAAOD,EAAME,OAAO1C,SAKrCL,OAAA,WAqBI,IArBK,IAAAgD,EAAApE,KAAAqE,EAE8CrE,KAAKG,MAAhDuD,EAFHW,EAEGX,SAAUE,EAFbS,EAEaT,YAAaC,EAF1BQ,EAE0BR,gBAGzBS,EAAqBV,EAAcC,EACnCU,EAAsBD,EAAqBT,EAG3CW,EAFkBd,EAASe,MAAMF,EAAqBD,GAErBI,IAAI,SAACC,EAASC,GACnD,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,CACPtB,YAAea,EAAKnB,MAAMM,YAC1B9B,GAAIkD,EAAQlD,GACZqD,IAAKH,EAAQlD,GACbsD,KAAMJ,EAAQI,KACd5B,MAAOwB,EAAQxB,UAKX6B,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKzB,EAAS0B,OAASvB,GAAkBoB,IACjED,EAAYK,KAAKJ,GAGnB,IAAMK,EAAoBN,EAAYN,IAAI,SAAAa,GACxC,OACElE,EAAAC,EAAAC,cAAA,MACEuD,IAAKS,EACL9D,GAAI8D,EACJjC,QAASc,EAAKN,aAEbyB,KAMP,OAEElE,EAAAC,EAAAC,cAAA,OAAKE,GAAK,eAAeD,UAAY,kBACrCH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACdgD,IAGHnD,EAAAC,EAAAC,cAAA,MAAIE,GAAG,gBACN6D,QApEc5D,cCKR8D,UARK,SAACvC,GAAD,OAClB5B,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBAAgBD,UAAU,uBAChCH,EAAAC,EAAAC,cAACkE,EAAD,CACClC,YAAaN,EAAMM,8DC8FTmC,UA1FS,kBACtBrE,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEiD,MAAK,aAsBLvE,OAAQ,SAAAwE,GAAI,OACVvE,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBAAgBD,UAAU,QAChCH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4CAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OACE2B,IAAI,kDACJE,IAAI,gBACJb,MAAO,CAAEsD,MAAO,SAChBC,OAAQ,QACP,IACHzE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,eAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,sBACEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACVoE,EAAKG,mBAAmBH,KAAKI,WAAW,GAAGC,OAGhD5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,gBACgB0E,IAAON,EAAKG,mBAAmBH,KAAKO,SAAS3F,MAAM4F,OAC/D,uBAGF/E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACVoE,EAAKG,mBAAmBH,KAAKO,SAASF,OAG3C5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,oBACEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACVoE,EAAKG,mBAAmBH,KAAKS,QAAQ,GAAGtB,QAI/C1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZoE,EAAKG,mBAAmBH,KAAKU,UAAU5B,IAAI,SAAA6B,GAAQ,OAClDlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CACEsE,KAAM,CACJ,CACEpC,MAAK,GAAI+C,EAASE,QAClB1D,MAAO2D,IAAY,CAAEC,WAAY,SAAW,CAAEC,MAAO,OAGzDrE,MAAO,CAAEC,OAAQ,SACjBqE,UAAW,GACXC,WAAY,IACZC,MAAO,SAAAC,GAAA,IAAEpB,EAAFoB,EAAEpB,KAAF,OAAAoB,EAAQC,UAClBrB,EAAK,GAAGsB,WAAWC,QAAQ,GAAK,KAE7BC,cAAe,EACfC,WAAY,CAAEC,SAAU,MAAOC,WAAY,aAC3CC,WAAW,YAEbnG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAAgC+E,EAASxB,YAhFlEa,KAAA6B,6BCWF,IA6EeC,EA7EK,kBAClBrG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEiD,MAAK,YA+BLvE,OAAQ,SAAAwE,GAAI,OACVvE,EAAAC,EAAAC,cAAA,OAAKE,GAAK,oBAAoBD,UAAY,uBACxCH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0DACfH,EAAAC,EAAAC,cAACoG,EAAD,OAIFtG,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,8BACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoE,EAAKgC,YAAYC,KAAK9C,OAEhD1D,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iCAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,KACEC,UAAS,kBACPoE,EAAKgC,YAAYE,KAAK,GAAGC,QAAQ,GAAGlF,SAK9CxB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yDACfH,EAAAC,EAAAC,cAAA,SAAI2D,KAAK8C,MAAMpC,EAAKgC,YAAYE,KAAK,GAAGG,KAAKC,MAA7C,MAGF7G,EAAAC,EAAAC,cAAA,OAAKC,UAAY,8DACdH,EAAAC,EAAAC,cAAA,SACG2D,KAAK8C,MAAMpC,EAAKgC,YAAYE,KAAK,GAAGG,KAAKE,UAD5C,QAGGjD,KAAK8C,MAAMpC,EAAKgC,YAAYE,KAAK,GAAGG,KAAKG,UAH5C,MAMH/G,EAAAC,EAAAC,cAAA,OAAKC,UAAY,sFACfH,EAAAC,EAAAC,cAAA,SAAIqE,EAAKgC,YAAYE,KAAK,GAAGC,QAAQ,GAAGM,cAE1ChH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,2FAnEzBoE,KAAA0C,uBCMaC,oGAzBXC,WAAA,SAAWvE,GAETA,EAAME,OAAOsE,gBAEjBrH,OAAA,WACE,IAOOsH,EAAW1I,KAAKiD,MAAhByF,QAEP,OACErH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CACED,QAASA,EACTE,KAZS,CACTC,WAAY,CACZC,SAAU,EACVtG,OAAQ,OAURuG,QAAS/I,KAAKwI,iBAnBDQ,IAAMtH,oBCyEZuH,iBAnEO,kBAGpB5H,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEiD,MAAK,aAwBLvE,OAAQ,SAAAwE,GAAI,OAGNvE,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OAAOC,GAAG,eAC3BJ,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CACAC,kBAAmB,IACnBC,mBAAoB,GACpBC,YAAa,KAEPhI,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACCtD,EAAK0D,gBAAgBC,MAAM7E,IACxB,SAAC8E,GAAD,OACInI,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAOtE,MAAO,GACdvD,EAAAC,EAAAC,cAACkI,EAAD,CAEAf,QAASc,EAAKE,KAAKhB,cASnBrH,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,mBACA7H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,sBAlDtBtD,KAAA+D,iCCgBaC,EAdU,SAAC3G,GAAD,OACvB5B,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CACc1H,MAAOc,EAAMd,MACb2H,IAAK7G,EAAM6G,IACXC,OAAQ9G,EAAM8G,OACdC,gBAAiB,GACjBC,mBAAoB,GACpBlH,MAAM,QACNyE,WAAW,cACX0C,sBAAsB,aACtBC,8BAA8B,cC+G/BC,UAnHA,SAACnH,GAAD,OACb5B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEiD,MAAK,aA8DLvE,OAAQ,SAAAwE,GAAI,OACVvE,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBAAoBD,UAAU,uBACtCH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CACEC,kBAAmB,IACnBC,mBAAoB,GACpBC,YAAa,IAEbhI,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACGtD,EAAKyE,UAAUC,MAAM,GAAGC,SAAS7F,IAAI,SAAA8F,GAAO,OAC3CnJ,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAOtE,MAAO,GACdvD,EAAAC,EAAAC,cAACkJ,EAAD,CACEtI,MAAOqI,EAAQrI,MACf2H,IAAKU,EAAQE,UACbX,OAAQS,EAAQG,YAKtBtJ,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAa3G,MAAO,CAAEqI,gBAAiB,cAAeC,OAAQ,SAC5DxJ,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,gBAAiBC,KAAM,KAAMC,MAAO,WAE7D1B,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAY3G,MAAO,CAAEqI,gBAAiB,cAAeC,OAAQ,SAC3DxJ,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,WAAYC,KAAM,KAAMC,MAAO,WAExD1B,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAY3G,MAAO,CAAEqI,gBAAiB,cAAeC,OAAQ,SAC3DxJ,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,OAAQC,KAAM,KAAMC,MAAO,WAEpD1B,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAY3G,MAAO,CAAEqI,gBAAiB,cAAeC,OAAQ,SAC1D,IACDxJ,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,UAAWC,KAAM,KAAMC,MAAO,WAEvD1B,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAY3G,MAAO,CAAEqI,gBAAiB,cAAeC,OAAQ,SAC3DxJ,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAM,eAAgBC,KAAM,KAAMC,MAAO,YAG9D1B,EAAAC,EAAAC,cAAA,OACE2B,IAAI,2CACJE,IAAI,OACJb,MAAO,CAAEsD,MAAO,WAElBxE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAG+B,QAAW,kBAAML,EAAM6H,YAAY7H,EAAMxB,KAAK+B,MAAOP,EAAMxB,IAA9D,aAzGNmE,KAAAmF,MC6GaC,sJApHZ7K,MAAQ,CACP8K,oBAAoB,EACpBC,UAAU,EACVC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,KAGrB1I,YAAa,SAAC9B,GACZ,OAAQA,GACN,IAAK,IACF5B,EAAKoB,SAAS,CAACgK,oBAAmB,EAAOiB,iBAAgB,IAC3D,IAAK,IACFrM,EAAKoB,SAAS,CAACgK,oBAAmB,EAAOE,mBAAkB,QAKhEL,YAAY,SAACrJ,GACV5B,EAAKoB,SAAS,CACbgK,oBAAmB,EACnBkB,mBAAkB,mCAIxB/K,OAAA,WACI,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAA8CC,GAAG,YAChEJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,iBAAiBD,UAAU,QACnCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC6K,EAAD,OAGF/K,EAAAC,EAAAC,cAAA,OAAKE,GAAG,mBAAmBD,UAAU,eACrCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,kBAAkBD,UAAU,UACpCH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,iBACNJ,EAAAC,EAAAC,cAAC8K,EAAD,QAGJhL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdxB,KAAKG,MAAM8K,oBACR5J,EAAAC,EAAAC,cAAC+K,EAAD,CACA/I,YAAavD,KAAKuD,cAGrBvD,KAAKG,MAAMgM,mBACV9K,EAAAC,EAAAC,cAACgL,EAAD,CACEzB,YAAa9K,KAAK8K,iBAMpBzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACiL,EAAD,UAMRnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACkL,EAAD,QAGJpL,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBAAoBD,UAAU,2BACpCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,mBAONH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,WAAWD,UAAU,UAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,GAAG,eACvBJ,EAAAC,EAAAC,cAACmL,EAAD,YASZrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,eA5GkBE,aCVxBiL,oGACJvL,OAAA,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBACNJ,EAAAC,EAAAC,cAACqL,EAAD,WAJgBlL,cAUTiL,8CCdfE,EAAA5M,EAAA6M,EAAA,sBAAAC,IAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAAAS,EAAAT,EAAAK,EAAAG,GAAAR,EAAA5M,EAAA6M,EAAA,sBAAAQ,EAAAhM,IAAAuL,EAAA,SAYMU,EAAqBvE,IAAMwE,cAAc,IAEzCT,EAAc,SAAA9J,GAAK,OACvBgK,EAAA3L,EAAAC,cAACgM,EAAmBE,SAApB,KACG,SAAAC,GACC,OACEzK,EAAM2C,MACL8H,EAAgBzK,EAAM0C,QAAU+H,EAAgBzK,EAAM0C,OAAOC,MAEtD3C,EAAM7B,QAAU6B,EAAM0K,UAC5B1K,EAAM2C,KAAO3C,EAAM2C,KAAKA,KAAO8H,EAAgBzK,EAAM0C,OAAOC,MAGvDqH,EAAA3L,EAAAC,cAAA,uCA4BfwL,EAAYa,UAAY,CACtBhI,KAAMiI,IAAUC,OAChBnI,MAAOkI,IAAUE,OAAOC,WACxB5M,OAAQyM,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAvH,GAAkB,IAAfwH,EAAexH,EAAfwH,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEzF,IAAMzH,cAAcsN,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO","file":"component---src-pages-dashboard-js-c3306663489b9e43a11f.js","sourcesContent":["import React, { Component } from 'react'\nimport './date.css'\n\n/*https://medium.com/@dpark/time-date-in-react-using-setinterval-54ece428e0cf */\n\nclass TimeContainer extends Component {\n  constructor() {\n    super()\n    let d = new Date()\n    this.state = {\n      day: d.getDay(),\n      month: d.getMonth(),\n      date: d.getDate(),\n      year: d.getFullYear(),\n      time: d.toLocaleTimeString(),\n    }\n    this.countingSecond = this.countingSecond.bind(this)\n  }\n  countingSecond() {\n    let d = new Date()\n    this.setState({\n      day: d.getDay(),\n      month: d.getMonth(),\n      date: d.getDate(),\n      year: d.getFullYear(),\n      time: d.toLocaleTimeString(),\n    })\n  }\n  componentWillMount() {\n    setInterval(this.countingSecond, 1000)\n  }\n  render() {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'November',\n      'December',\n    ]\n    const days = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ]\n    return (\n      <div className = \"time\" id = \"timeCard\">\n            <p id=\"dateStyle\" className='subtitle has-text-white has-text-centered is-size-4 is-size-5-mobile is-size-5-tablet'>{days[this.state.day]},{\" \"}\n            {months[this.state.month]} {this.state.date}</p>\n            <p id=\"time-style\" className='title has-text-white is-size-4 has-text-centered is-size-5-tablet'> {this.state.time}</p>\n        </div>\n      \n    )\n  }\n}\nexport default TimeContainer","import React, { Component } from \"react\";\nimport {Calendar, momentLocalizer} from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./fullCalendarDash.css\"\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nmoment.locale=(\"en-GB\")\nconst localizer = momentLocalizer(moment);\n\nclass BigCalendar extends Component {\n  state = {\n    events: [\n      {\n        start: \"\",\n        end: \"\",\n        title: \"\"\n      }\n    ]\n  };\n\n  render() {\n    return (\n      <div>\n        <Calendar\n          localizer={localizer}\n          defaultDate={new Date()}\n          views={{month:true}}\n          events={this.state.events}\n          style={{ height: \"21vh\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BigCalendar;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport \"./leftNavDash.css\"\n\nconst DashboardMainMenu = () => (\n  <aside\n    id=\"navigation-side\"\n    className=\"menu\"\n  >\n    <ul className=\"menu-list\">\n    <Link to='/news'>\n      <li>\n      <span className=\"icon is-large icons\">\n          <FontAwesomeIcon icon={'newspaper'} size={'lg'} color={'#50CFDE'}/>\n        </span>\n        </li>\n        </Link>\n        <Link to='/podcasts'>\n      <li>\n        <span className=\"icon is-large icons\">\n          <FontAwesomeIcon icon={'podcast'} size={'lg'} color={'#50CFDE'}/>\n        </span>\n      </li>\n      </Link>\n      <Link to='/youtube'>\n      <li>\n        <span className=\"icon is-large icons\">\n          <FontAwesomeIcon icon={'video'} size={'lg'} color={'#50CFDE'}/>\n        </span>\n      </li>\n      </Link>\n      <Link to='/weather'>\n      <li>\n        <span className=\"icon is-large icons\">\n          <FontAwesomeIcon icon={'cloud-sun-rain'} size={'lg'} color={'#50CFDE'}/>\n        </span>\n      </li>\n      </Link>\n      <Link to='/calendar'>\n      <li>\n        <span className=\"icon is-large icons\">\n          <FontAwesomeIcon icon={'calendar-alt'} size={'lg'} color={'#50CFDE'}/>\n        </span>\n      </li>\n      </Link>\n      <Link to='/wakatime'>\n      <li>\n        <span className=\"icon is-large icons\">\n          <FontAwesomeIcon icon={'code'} size={'lg'} color={'#50CFDE'}/>\n        </span>\n      </li>\n      </Link>\n      <Link to='/clock'>\n      <li>\n        <span className=\"icon is-large icons\">\n          <FontAwesomeIcon icon={'clock'} size={'lg'} color={'#50CFDE'}/>\n        </span>\n      </li>\n      </Link>\n    </ul>\n  </aside>\n)\n\nexport default DashboardMainMenu","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './podcastItem.css'\n\nconst PodcastItem = props => (\n  <div className=\"column is-one-quarter\">\n    <div className=\"logo-card\">\n      <img className=\"podcast-image\" src={props.image} alt={props.alt} />\n      <div className=\"podcast-overlay\">\n        <div class=\"podcast-play\">\n          <FontAwesomeIcon\n            icon={'play-circle'}\n            size={'2x'}\n            color={'white'}\n            onClick={() => props.playPodcast(props.id)}\n            value={props.id}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n)\nexport default PodcastItem","import React, { Component } from 'react'\nimport PodcastItem from '../components/podcastItem'\nimport PodcastList from \"../myPodcastList.json\"\nimport './podcasts.css'\n\n/* https://codepen.io/PiotrBerebecki/pen/pEYPbY */\n\nclass Podcasts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      channels: PodcastList,\n      currentPage: 1,\n      channelsPerPage: 8\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    console.log(PodcastList)\n    console.log(PodcastList[0].id)\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id),\n    });\n  }\n\n\n  render() {\n\n      const { channels, currentPage, channelsPerPage } = this.state;\n\n      // Logic for displaying current todos\n      const indexOfLastChannel = currentPage * channelsPerPage;\n      const indexOfFirstChannel = indexOfLastChannel - channelsPerPage;\n      const currentChannels = channels.slice(indexOfFirstChannel, indexOfLastChannel);\n\n      const renderChannels = currentChannels.map((channel, index) => {\n        return <PodcastItem\n        playPodcast = {this.props.playPodcast}\n        id={channel.id}\n        key={channel.id}\n        name={channel.name}\n        image={channel.image}\n      />\n      });\n\n      // Logic for displaying page numbers\n      const pageNumbers = [];\n      for (let i = 1; i <= Math.ceil(channels.length / channelsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      const renderPageNumbers = pageNumbers.map(number => {\n        return (\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n          >\n            {number}\n          </li>\n        );\n      });\n\n\n      return (\n        \n        <div id = \"podcast-card\" className = \"has-text-white\">\n        <section>\n          <div className=\"columns is-gapless is-multiline\">\n          {renderChannels}\n          </div>\n        </section>\n        <ul id=\"page-numbers\">\n        {renderPageNumbers}\n      </ul>\n      </div>\n      );\n\n  }\n}\nexport default Podcasts","import React from 'react'\nimport Podcasts from '../components/podcasts'\nimport './podcastCard.css'\n\nconst PodcastCard = (props) => (\n  <div id=\"podcast-cards\" className=\"card has-text-white\">\n    <Podcasts\n     playPodcast={props.playPodcast}\n    />\n  </div>\n)\n\nexport default PodcastCard\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Moment from 'moment'\nimport PieChart from 'react-minimal-pie-chart'\nimport randomColor from 'randomcolor'\nimport './wakatime.css'\n\n/*WakaTime API: https://wakatime.com/developers */\n/*Random Color: https://www.npmjs.com/package/randomcolor */\n/*Pie Chart: https://github.com/toomuchdesign/react-minimal-pie-chart#readme */\n\nconst WakaTimeWebPart = () => (\n  <StaticQuery\n    query={graphql`\n      query WakaTimeQuery {\n        thirdPartyWakatime {\n          data {\n            best_day {\n              date\n              text\n            }\n            categories {\n              text\n            }\n            editors {\n              name\n            }\n            languages {\n              name\n              percent\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div id=\"wakatime-card\" className=\"card\">\n        <header className=\"card-header has-text-white is-shadowless\">\n          <div className=\"card-header-title is-centered\">\n            <img\n              src=\"../images/logo/Logo + Text Horizontal_white.png\"\n              alt=\"WakaTime Logo\"\n              style={{ width: '100px' }}\n              hspace={'5px'}\n            />{' '}\n            <span className=\"has-text-white\">Analytics</span>\n          </div>\n        </header>\n        <div className=\"columns\">\n          <div className=\"column\">\n          <p className='light-grey'>Coding Last 7 Days</p>\n            <p className=\"has-text-white\">\n              {data.thirdPartyWakatime.data.categories[0].text}\n            </p>\n          </div>\n          <div className=\"column\">\n          <p className='light-grey'>\n            Best Day was {Moment(data.thirdPartyWakatime.data.best_day.date).format(\n              'dddd, MMMM Do YYYY'\n            )}\n          </p>\n            <p className=\"has-text-white\">\n              {data.thirdPartyWakatime.data.best_day.text}\n            </p>\n          </div>\n          <div className=\"column\">\n          <p className='light-grey'>Editor of Choice</p>\n            <p className=\"has-text-white\">\n              {data.thirdPartyWakatime.data.editors[0].name}\n            </p>\n          </div>\n        </div>\n        <div className=\"columns is-multiline\">\n          {data.thirdPartyWakatime.data.languages.map(language => (\n            <div className=\"column\">\n              <PieChart\n                data={[\n                  {\n                    value:`${language.percent}`,\n                    color: randomColor({ luminosity: 'light' }, { count: 27 }),\n                  },\n                ]}\n                style={{ height: '100px' }}\n                lineWidth={20}\n                totalValue={100}               \n                label={({data, dataIndex}) => \n             data[0].percentage.toFixed(2) + '%'\n              }\n                labelPosition={0}\n                labelStyle={{ fontSize: '1em', fontFamily: 'san-serif' }}\n                background=\"#122342\"\n              />\n              <p className=\"has-text-white language-name\">{language.name}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    )}\n  />\n)\n\nexport default WakaTimeWebPart\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby';\nimport Date from \"./date.js\"\nimport '../scss/open-weather-icons.scss';\nimport './weatherDash.css';\n\n/*OpenWeatherMap API: https://openweathermap.org/api */\n/*Weather API: https://rapidapi.com/community/api/open-weather-map */\n\nfunction getCardinalDirection(angle) {\n  const directions = [\n    '↑ N',\n    '↗ NE',\n    '→ E',\n    '↘ SE',\n    '↓ S',\n    '↙ SW',\n    '← W',\n    '↖ NW',\n  ]\n  return directions[Math.round(angle / 45) % 8]\n}\n\nconst WeatherDash = () => (\n  <StaticQuery\n    query={graphql`\n      query WeatherDayQuery {\n        openWeather {\n          city {\n            name\n          }\n          list {\n            weather {\n              description\n              main\n              id\n              icon\n            }\n            main {\n              temp\n              pressure\n              humidity\n              temp_min\n              temp_max\n              sea_level\n              grnd_level\n            }\n            wind {\n              deg\n              speed\n            }\n            dt_txt\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div id = \"weather-main-card\" className = \"card has-text-white\">\n        <div className = \"card-header-title is-centered is-size-2 has-text-white\">\n          <Date />\n        </div>\n       \n\n        <div className = \"card-content\">\n          <div className = \"content\">\n          <div className = \"location has-text-centered\">\n          <p className=\"is-size-2\">{data.openWeather.city.name}</p>\n          </div>\n          <div className =\"weatherIcon has-text-centered\">\n          <span className=\"icon is-large is-size-4\">\n                <i\n                  className={`owi owi-4x owi-${\n                    data.openWeather.list[0].weather[0].icon\n                  }`}\n                />\n          </span>\n          </div>\n          <div className = \"temp title is-size-1 has-text-white has-text-centered\">\n            <p>{Math.round(data.openWeather.list[0].main.temp)}&#176;\n            </p>\n          </div>\n          <div className = \" title high-low has-text-centered is-size-4 has-text-white\" >\n             <p>\n               {Math.round(data.openWeather.list[0].main.temp_min)}&#176; \n               &nbsp; &nbsp; \n               {Math.round(data.openWeather.list[0].main.temp_max)}&#176; \n            </p>\n          </div>\n          <div className = \"title weatherDescription has-text-white is-capitalized has-text-centered is-size-5\">\n            <p>{data.openWeather.list[0].weather[0].description}</p>\n          </div>\n          <div className = \"title weatherDescription has-text-white is-capitalized has-text-centered is-size-5\">\n          </div>\n          </div>\n        </div>\n      </div>\n    )}\n  />\n)\n\nexport default WeatherDash;","import React from 'react';\nimport YouTube from 'react-youtube';\n \n\nclass Player extends React.Component {\n    videoReady(event) {\n      // access to player in all event handlers via event.target\n      event.target.pauseVideo();\n    }\n  render() {\n    const opts = {\n        playerVars: { // https://developers.google.com/youtube/player_parameters\n        autoplay: 0,\n        height: '50'\n      }\n    };\n\n    const {videoId} = this.props\n \n    return (\n      <YouTube\n        videoId={videoId}\n        opts={opts}\n        onReady={this.videoReady}\n        \n      />\n    );\n  }\n \n}\nexport default Player;","import React from 'react';\nimport {  StaticQuery, graphql } from 'gatsby';\nimport Player from './youtube.js';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, ButtonFirst, ButtonLast } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport './youtubeLayout.css';\n\n\n\n\nconst YoutubeLayout = () => (\n  \n  \n  <StaticQuery\n    query={graphql`\n      query YouTubeQuery {\n        allYoutubeVideo{\n          edges {\n            node {\n              id\n              title\n              description\n              videoId\n              channelTitle\n              thumbnail {\n                url\n                width\n                height\n              }\n              localThumbnail {\n                id\n              }\n            }\n          }\n        }\n      }\n    \n    `}\n    render={data => (\n        \n\n          <div className = \"card\" id=\"youtubeCard\">\n          <CarouselProvider\n          naturalSlideWidth={100}\n          naturalSlideHeight={50}\n          totalSlides={150}\n          >\n                <Slider>\n                {data.allYoutubeVideo.edges.map(\n                    (edge) => (\n                        <Slide index={0}>\n                        <Player \n                        \n                        videoId={edge.node.videoId}\n                        />\n                        \n                        \n                        </Slide>\n                        )\n                        )}\n                        \n                        </Slider>\n                        <ButtonBack>Last Video</ButtonBack>\n                        <ButtonNext>Next Video</ButtonNext>\n                        </CarouselProvider>\n                        </div>\n                \n              \n            \n\n        \n      \n    \n    )}\n  />\n)\n\nexport default YoutubeLayout;\n","import React from 'react'\nimport AudioCard from 'audiocard'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n  ButtonFirst,\n  ButtonLast,\n  ButtonPlay,\n} from 'pure-react-carousel'\nimport 'pure-react-carousel/dist/react-carousel.es.css'\n\nconst PodcastAudioCard = (props) => (\n  <AudioCard\n                title={props.title}\n                art={props.art}\n                source={props.source}\n                skipBackSeconds={10}\n                skipForwardSeconds={30}\n                color=\"white\"\n                background=\"transparent\"\n                progressBarBackground=\"darkorange\"\n                progressBarCompleteBackground=\"darkGray\"\n              />\n)\n\nexport default PodcastAudioCard","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport PodcastPlayer from '../audioCard.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    CarouselProvider,\n    Slider,\n    Slide,\n    ButtonBack,\n    ButtonNext,\n    ButtonFirst,\n    ButtonLast,\n    ButtonPlay,\n  } from 'pure-react-carousel'\n  import 'pure-react-carousel/dist/react-carousel.es.css'\n  import \"./bigWeb.css\"\n\n/*Listen Notes API for Podcasts: https://www.listennotes.com/api/ */\n/* pure-react-carousel: https://www.npmjs.com/package/pure-react-carousel */\n/*AudioCard Player:  https://erikras.github.io/audiocard/?path=/story/examples--plain */\n\nconst BigWeb = (props) => (\n  <StaticQuery\n    query={graphql`\n      query BigWebApiQuery {\n        allBigWeb {\n          nodes {\n            alternative_id\n            title\n            publisher\n            image\n            thumbnail\n            listennotes_url\n            total_episodes\n            explicit_content\n            description\n            itunes_id\n            rss\n            latest_pub_date_ms\n            earliest_pub_date_ms\n            language\n            country\n            website\n            extra {\n              twitter_handle\n              facebook_handle\n              instagram_handle\n              wechat_handle\n              patreon_handle\n              youtube_url\n              linkedin_url\n              spotify_url\n              google_url\n              url1\n              url2\n              url3\n            }\n            is_claimed\n            email\n            looking_for {\n              sponsors\n              guests\n              cohosts\n              cross_promotion\n            }\n            genre_ids\n            episodes {\n              alternative_id\n              title\n              description\n              pub_date_ms\n              audio\n              audio_length_sec\n              listennotes_url\n              image\n              thumbnail\n              maybe_audio_invalid\n              listennotes_edit_url\n              explicit_content\n            }\n            next_episode_pub_date\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div id=\"podcastPlayerCard\" className=\"card has-text-white\">\n      <div>\n      <CarouselProvider\n        naturalSlideWidth={100}\n        naturalSlideHeight={35}\n        totalSlides={10}\n      >\n        <Slider>\n          {data.allBigWeb.nodes[1].episodes.map(episode => (\n            <Slide index={1}>\n            <PodcastPlayer\n              title={episode.title}\n              art={episode.thumbnail}\n              source={episode.audio}\n            />\n            </Slide>\n          ))}\n        </Slider>\n        <ButtonFirst style={{ backgroundColor: 'transparent', border: 'none' }}>\n          <FontAwesomeIcon icon={'fast-backward'} size={'lg'} color={'white'} />\n        </ButtonFirst>\n        <ButtonBack style={{ backgroundColor: 'transparent', border: 'none' }}>\n          <FontAwesomeIcon icon={'backward'} size={'lg'} color={'white'} />\n        </ButtonBack>\n        <ButtonPlay style={{ backgroundColor: 'transparent', border: 'none' }}>\n          <FontAwesomeIcon icon={'play'} size={'lg'} color={'white'} />\n        </ButtonPlay>\n        <ButtonNext style={{ backgroundColor: 'transparent', border: 'none' }}>\n          {' '}\n          <FontAwesomeIcon icon={'forward'} size={'lg'} color={'white'} />\n        </ButtonNext>\n        <ButtonLast style={{ backgroundColor: 'transparent', border: 'none' }}>\n          <FontAwesomeIcon icon={'fast-forward'} size={'lg'} color={'white'} />\n        </ButtonLast>\n      </CarouselProvider>\n      <img\n        src=\"../images/logo/listen_notes_api_logo.png\"\n        alt=\"logo\"\n        style={{ width: '125px' }}\n      />\n      <div>\n        <p onClick = {() => props.closePlayer(props.id)} value={props.id}>Close</p>\n      </div>\n    </div>\n\n      </div>\n    )}\n  />\n)\n\nexport default BigWeb","import React, {Component} from 'react';\nimport Date from \"./date\";\nimport Calendar from \"./fullCalendarDash\";\nimport LeftNav from \"./leftNavDash\"\nimport Podcasts from \"./podcasts\"\nimport PodcastCard from \"./podcastCard\"\nimport WakaWebPart from \"./wakatime\"\nimport WeatherDash from \"./weatherDash\";\nimport Youtube from \"./youtubeLayout\";\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport './dashboard.css';\nimport BigWeb from \"./myPods/bigweb\";\n\n\nclass DashboardLayout extends Component {\n   state = {\n    isDashboardShowing: true,\n    isBigWeb: false,\n    isPodcast1Showing: false,\n    isPodcast2Showing: false,\n    isPodcast3Showing: false,\n    isPodcast4Showing: false,\n    isPodcast5Showing: false,\n    isPodcast6Showing: false,\n    isPodcast7Showing: false,\n    isPodcast8Showing: false,\n    isPodcast9Showing: false,\n    isPodcast10Showing: false,\n    isPodcast11Showing: false,\n    isPodcast12Showing: false,\n    isPodcast13Showing: false,\n    isPodcast14Showing: false,\n    isPodcast15Showing: false,\n   }\n\n   playPodcast =(id) =>{\n     switch (id) {\n       case \"0\":\n         {this.setState({isDashboardShowing:false, isBigWebShowing:true})}\n        case \"1\":\n          {this.setState({isDashboardShowing:false, isPodcast1Showing:true})}\n     }\n        \n      }\n\n      closePlayer=(id) => {\n        {this.setState({\n          isDashboardShowing:true,\n          isPodcast0Showing:false\n        })}\n      }\n\n    render() {\n        return (\n          <div className=\"hero is-large is-flex-mobile is-flex-tablet\" id=\"dashHero\">\n          <div id=\"dashboard-card\" className=\"card\">\n          <div className=\"columns\">\n            <div className=\"column is-narrow\">\n              <LeftNav/>\n            </div>\n            \n            <div id=\"information-side\" className=\"column is-9\">\n            <div className=\"columns\">\n                <div className=\"column\">\n                  <div className=\"columns\">\n                  <div id=\"calendar-column\" className=\"column\">\n                  <div id=\"calendar-card\">\n                    <Calendar/>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"columns\">\n                  <div className=\"column\">\n                  {this.state.isDashboardShowing &&\n                      <PodcastCard\n                      playPodcast={this.playPodcast}\n                     />\n                  }\n                  {this.state.isPodcast0Showing &&\n                    <BigWeb\n                      closePlayer={this.closePlayer}\n                    />\n                  }\n                  </div>\n                  </div>\n                </div>\n                    <div className=\"column\">\n                      <Youtube/>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <WakaWebPart/>\n                </div>\n              </div>\n              <div id=\"commits-main-card\" className=\"columns card is-gapless\">\n                <div className=\"column\">\n                  <div className=\"has-text-white\">\n                    Waka Commits\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div id=\"farRight\" className=\"column\">\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <div className=\"card\" id=\"weatherCard\">\n                    <WeatherDash/>\n                  </div>  \n                </div>\n              </div>\n            </div>\n          </div>\n\n          \n        </div>\n        <div className=\"card newsCard\">\n        <div className=\"columns\">\n            <div className=\"column\">\n              News\n            </div>\n        </div>\n        </div>\n      </div> \n        )\n    }\n}\nexport default DashboardLayout;\n","import React, { Component } from 'react'\nimport DashboardLayout from '../components/dashboard.js'\nimport './dashboard.css'\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div id=\"dashboard-bg\">\n        <DashboardLayout />\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}