{"version":3,"sources":["webpack:///./src/components/date.js","webpack:///./src/components/youtube.js","webpack:///./src/components/weatherDash.js","webpack:///./src/components/dashboard.js","webpack:///./src/pages/dashboard.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/fullCalendarDash.js"],"names":["TimeContainer","_this","_Component","call","this","d","Date","state","day","getDay","month","getMonth","date","getDate","year","getFullYear","time","toLocaleTimeString","countingSecond","bind","assertThisInitialized_default","setState","componentWillMount","setInterval","render","react_default","a","createElement","id","className","Component","Player","videoReady","event","target","pauseVideo","videoId","props","YouTube","opts","playerVars","autoplay","onReady","React","WeatherDashWidget","gatsby_browser_entry","query","data","openWeather","city","name","list","weather","icon","Math","round","main","temp","description","angle","wind","deg","speed","src","alt","style","width","_530387871","LoadableCalendar","Loadable","loader","Promise","resolve","then","__webpack_require__","loading","DashboardLayout","to","index_es","size","color","dist_index_es","naturalSlideWidth","naturalSlideHeight","totalSlides","allYoutubeVideo","edges","map","edge","index","youtube","node","components_date","weatherDash","_3214634025","Dashboard","components_dashboard","m","module","exports","require","default","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","r","_fullcalendar_react__WEBPACK_IMPORTED_MODULE_1__","_fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_2__","_fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_2___default","Calendar","defaultView","header","left","center","right","plugins","dayGridPlugin","contentHeight","showNonCurrentDates"],"mappings":"4MAmEeA,sBA7Db,SAAAA,IAAc,IAAAC,EACZA,EAAAC,EAAAC,KAAAC,YACA,IAAIC,EAAI,IAAIC,KAFA,OAGZL,EAAKM,MAAQ,CACXC,IAAKH,EAAEI,SACPC,MAAOL,EAAEM,WACTC,KAAMP,EAAEQ,UACRC,KAAMT,EAAEU,cACRC,KAAMX,EAAEY,sBAEVhB,EAAKiB,eAAiBjB,EAAKiB,eAAeC,KAApBC,IAAAnB,IAVVA,sCAYdiB,eAAA,WACE,IAAIb,EAAI,IAAIC,KACZF,KAAKiB,SAAS,CACZb,IAAKH,EAAEI,SACPC,MAAOL,EAAEM,WACTC,KAAMP,EAAEQ,UACRC,KAAMT,EAAEU,cACRC,KAAMX,EAAEY,0BAGZK,mBAAA,WACEC,YAAYnB,KAAKc,eAAgB,QAEnCM,OAAA,WAuBE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAAiBC,UAAU,QACnCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,aAAaC,UAAU,wBAA7B,IAAsDzB,KAAKG,MAAMS,MACjES,EAAAC,EAAAC,cAAA,KAAGC,GAAG,kBAAkBC,UAAU,2BAdvB,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAOkEzB,KAAKG,MAAMC,KAA7E,IAAoF,IA3BvE,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,WACA,YAiBQJ,KAAKG,MAAMG,OADnB,IAC4BN,KAAKG,MAAMK,aAvDjBkB,yCCuBbC,oGAvBXC,WAAA,SAAWC,GAETA,EAAMC,OAAOC,gBAEjBX,OAAA,WACE,IAMOY,EAAWhC,KAAKiC,MAAhBD,QAEP,OACEX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEF,QAASA,EACTG,KAXS,CACXC,WAAY,CACVC,SAAU,IAUVC,QAAStC,KAAK4B,iBAlBDW,IAAMb,6BCkB3B,IAwEec,EAxEW,kBACxBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,MAAK,YA+BLtB,OAAQ,SAAAuB,GAAI,OACVtB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBAAoBC,UAAU,wBACpCJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,6BAChBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uEACVkB,EAAKC,YAAYC,KAAKC,OAG3BzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACdJ,EAAAC,EAAAC,cAAA,KACEE,UAAS,UACPkB,EAAKC,YAAYG,KAAK,GAAGC,QAAQ,GAAGC,QAI1C5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZyB,KAAKC,MAAMR,EAAKC,YAAYG,KAAK,GAAGK,KAAKC,MAD5C,KAGAhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZkB,EAAKC,YAAYG,KAAK,GAAGC,QAAQ,GAAGM,aAEvCjC,EAAAC,EAAAC,cAAA,YArEkBgC,EAsEMZ,EAAKC,YAAYG,KAAK,GAAGS,KAAKC,IArE7C,CACjB,MACA,OACA,MACA,OACA,MACA,OACA,MACA,QAEgBP,KAAKC,MAAMI,EAAQ,IAAM,IA0DjC,MAC+D,IAC5DL,KAAKC,MAAMR,EAAKC,YAAYG,KAAK,GAAGS,KAAKE,OAF5C,UAMArC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAClBJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKoC,IAAI,gDAAgDC,IAAI,OAAOC,MAAO,CAACC,MAAO,cA7E/F,IAA8BP,GAe5BZ,KAAAoB,KCLIC,UAAmBC,IAAS,CAChCC,OAAO,kBAAMC,QAAAC,UAAAC,KAAAC,EAAAvD,KAAA,YACbwD,QAFgC,WAG9B,OAAOlD,EAAAC,EAAAC,cAAA,8BA6MIiD,EAzMS,kBAEtBnD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,MAAK,aAwBLtB,OAAQ,SAAAuB,GAAI,OACVtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACjBJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAAiBC,UAAU,QACjCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sDACbJ,EAAAC,EAAAC,cAAA,SAAOC,GAAG,YAAYC,UAAU,QAC9BJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMgC,GAAG,SACPpD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACdJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEzB,KAAM,YACN0B,KAAM,KACNC,MAAO,aAKfvD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMgC,GAAG,aACPpD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACdJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEzB,KAAM,UACN0B,KAAM,KACNC,MAAO,aAKfvD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMgC,GAAG,YACPpD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACdJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEzB,KAAM,QACN0B,KAAM,KACNC,MAAO,aAKfvD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMgC,GAAG,YACPpD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACdJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEzB,KAAM,iBACN0B,KAAM,KACNC,MAAO,aAKfvD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMgC,GAAG,aACPpD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACdJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEzB,KAAM,eACN0B,KAAM,KACNC,MAAO,gBASrBvD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBAAmBC,UAAU,eAEnCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOD,GAAG,gBAAzB,cAOJH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACfJ,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACAC,kBAAmB,IACnBC,mBAAoB,GACpBC,YAAa,KAEb3D,EAAAC,EAAAC,cAACsD,EAAA,EAAD,KACClC,EAAKsC,gBAAgBC,MAAMC,IAC1B,SAACC,GAAD,OACA/D,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOQ,MAAO,GACVhE,EAAAC,EAAAC,cAAC+D,EAAD,CAEMtD,QAASoD,EAAKG,KAAKvD,cAS/BX,EAAAC,EAAAC,cAACsD,EAAA,EAAD,mBACAxD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,sBAKFxD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOD,GAAG,YAAzB,WAQNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBAAkBC,UAAU,UAClCJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOD,GAAG,gBACvBH,EAAAC,EAAAC,cAACyC,EAAD,WAQV3C,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAAWC,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOD,GAAG,YACxBH,EAAAC,EAAAC,cAACiE,EAAD,SAILnE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAEjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOD,GAAG,eACvBH,EAAAC,EAAAC,cAACkE,EAAD,SAINpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YAAYC,UAAU,QAA9B,iBASRJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBAAmBC,UAAU,QACnCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOD,GAAG,cAAzB,gBA1LVmB,KAAA+C,KCvBIC,oGACJvE,OAAA,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACNH,EAAAC,EAAAC,cAACqE,EAAD,WAJgBlE,cAUTiE,iCCdf,IAAsBE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CvB,EAAArE,EAAAiG,EAAA,sBAAAC,IAAA,IAAAC,EAAA9B,EAAA,GAAA+B,EAAA/B,EAAAgC,EAAAF,GAAAG,EAAAjC,EAAA,GAAAkC,EAAAlC,EAAAgC,EAAAC,GAAAE,EAAAnC,EAAA,IAAAoC,EAAApC,EAAAgC,EAAAG,GAAAnC,EAAArE,EAAAiG,EAAA,sBAAAQ,EAAApF,IAAAgD,EAAA,SAYMqC,EAAqBpE,IAAMqE,cAAc,IAEzCT,EAAc,SAAAlE,GAAK,OACvBoE,EAAA/E,EAAAC,cAACoF,EAAmBE,SAApB,KACG,SAAAC,GACC,OACE7E,EAAMU,MACLmE,EAAgB7E,EAAMS,QAAUoE,EAAgB7E,EAAMS,OAAOC,MAEtDV,EAAMb,QAAUa,EAAM8E,UAC5B9E,EAAMU,KAAOV,EAAMU,KAAKA,KAAOmE,EAAgB7E,EAAMS,OAAOC,MAGvD0D,EAAA/E,EAAAC,cAAA,uCA4Bf4E,EAAYa,UAAY,CACtBrE,KAAMsE,IAAUC,OAChBxE,MAAOuE,IAAUE,OAAOC,WACxBhG,OAAQ6F,IAAUI,KAClBN,SAAUE,IAAUI,wGCnDhBC,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBvD,UAAOwD,4BAA4BF,EAASG,UAClE,OAAKF,EAIElF,IAAMhB,cAAcqG,IAApBC,OAAAC,OAAA,CACLN,WACAC,iBACGA,EAAcM,OANV,MAUXT,EAAiBN,UAAY,CAC3BQ,SAAUP,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE,yxvDCzBfhD,EAAA2D,EAAA/B,GAAA,IAAAE,EAAA9B,EAAA,GAAA+B,EAAA/B,EAAAgC,EAAAF,GAAA8B,EAAA5D,EAAA,KAAA6D,EAAA7D,EAAA,KAAA8D,EAAA9D,EAAAgC,EAAA6B,GAAA7D,EAAA,KAAAA,EAAA,KAqBe+D,UAdE,kBACbhC,EAAA/E,EAAAC,cAAC2G,EAAA,EAAD,CACAI,YAAa,eACbC,OAAQ,CACNC,KAAK,OACLC,OAAO,QACPC,MAAM,QAERC,QAAS,CAACC,KACVC,cAAe,IACfC,qBAAqB","file":"component---src-pages-dashboard-js-096ddb283ca27df5f9aa.js","sourcesContent":["import React, { Component } from 'react'\nimport './date.css'\n\n/*https://medium.com/@dpark/time-date-in-react-using-setinterval-54ece428e0cf */\n\nclass TimeContainer extends Component {\n  constructor() {\n    super()\n    let d = new Date()\n    this.state = {\n      day: d.getDay(),\n      month: d.getMonth(),\n      date: d.getDate(),\n      year: d.getFullYear(),\n      time: d.toLocaleTimeString(),\n    }\n    this.countingSecond = this.countingSecond.bind(this)\n  }\n  countingSecond() {\n    let d = new Date()\n    this.setState({\n      day: d.getDay(),\n      month: d.getMonth(),\n      date: d.getDate(),\n      year: d.getFullYear(),\n      time: d.toLocaleTimeString(),\n    })\n  }\n  componentWillMount() {\n    setInterval(this.countingSecond, 1000)\n  }\n  render() {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'November',\n      'December',\n    ]\n    const days = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ]\n    return (\n      <div id=\"time-date-card\" className='card'> \n      <div className='card-contnet'>      \n      <div className='content'>\n      <p id=\"time-style\" className='title has-text-white'> {this.state.time}</p>\n      <p id=\"day-month-style\" className='subtitle has-text-white'>{days[this.state.day]},{\" \"}\n      {months[this.state.month]} {this.state.date}</p>\n      </div>\n      </div>         \n      </div>\n    )\n  }\n}\nexport default TimeContainer","import React from 'react';\nimport YouTube from 'react-youtube';\n \n\nclass Player extends React.Component {\n    videoReady(event) {\n      // access to player in all event handlers via event.target\n      event.target.pauseVideo();\n    }\n  render() {\n    const opts = {\n      playerVars: { // https://developers.google.com/youtube/player_parameters\n        autoplay: 0\n      }\n    };\n\n    const {videoId} = this.props\n \n    return (\n      <YouTube\n        videoId={videoId}\n        opts={opts}\n        onReady={this.videoReady}\n      />\n    );\n  }\n \n}\nexport default Player;","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n// import Moment from 'moment'\n// import './weather-day-widget.css'\n\n/*OpenWeatherMap API: https://openweathermap.org/api */\n/*Weather API: https://rapidapi.com/community/api/open-weather-map */\n\nfunction getCardinalDirection(angle) {\n  const directions = [\n    '↑ N',\n    '↗ NE',\n    '→ E',\n    '↘ SE',\n    '↓ S',\n    '↙ SW',\n    '← W',\n    '↖ NW',\n  ]\n  return directions[Math.round(angle / 45) % 8]\n}\n\nconst WeatherDashWidget = () => (\n  <StaticQuery\n    query={graphql`\n      query WeatherDayQuery {\n        openWeather {\n          city {\n            name\n          }\n          list {\n            weather {\n              description\n              main\n              id\n              icon\n            }\n            main {\n              temp\n              pressure\n              humidity\n              temp_min\n              temp_max\n              sea_level\n              grnd_level\n            }\n            wind {\n              deg\n              speed\n            }\n            dt_txt\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div id=\"weather-main-card\" className=\"card has-text-white \">\n        <header className=\"card-header is-shadowless\">\n          <p className=\"card-header-title is-uppercase is-centered is-size-4 has-text-white\">\n            {data.openWeather.city.name}\n          </p>\n        </header>\n        <div className=\"card-content\">\n          <div className=\"content\">\n            <span className=\"icon is-large\">\n              <i\n                className={`wi-owm-${\n                  data.openWeather.list[0].weather[0].icon\n                }`}\n              />\n            </span>\n            <div className=\"is-size-1\">\n              {Math.round(data.openWeather.list[0].main.temp)}&#176;\n            </div>\n            <div className=\"is-uppercase\">\n              {data.openWeather.list[0].weather[0].description}\n            </div>\n            <div>\n              {getCardinalDirection(data.openWeather.list[0].wind.deg)} at{' '}\n              {Math.round(data.openWeather.list[0].wind.speed)} mph\n            </div>\n            </div>\n          </div>\n            <footer className='card-footer'>\n            <p className='card-footer-item'>\n            <img src=\"../images/logo/openweather-white-logo-RGB.png\" alt='logo' style={{width: '100px'}}/>\n            </p>\n            \n          </footer>\n      </div>\n    )}\n  />\n)\n\nexport default WeatherDashWidget;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\nimport Loadable from \"react-loadable\";\nimport Calendar from \"./fullCalendarDash.js\"\nimport Date from \"./date\";\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, ButtonFirst, ButtonLast } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport Player from './youtube.js';\nimport WeatherDash from \"./weatherDash\";\n\nimport './dashboard.css';\n\n// import  \"@fullcalendar/core/main.css\";\n// import \"@fullcalendar/daygrid/main.css\";\n\nconst LoadableCalendar = Loadable({\n  loader:() => import(\"./fullCalendarDash\"),\n  loading(){\n    return <div>Loading....</div>\n  }\n})\n\nconst DashboardLayout = () => (\n  \n  <StaticQuery\n    query={graphql`\n      query YouTubeQuery {\n        allYoutubeVideo{\n          edges {\n            node {\n              id\n              title\n              description\n              videoId\n              channelTitle\n              thumbnail {\n                url\n                width\n                height\n              }\n              localThumbnail {\n                id\n              }\n            }\n          }\n        }\n      }\n    \n    `}\n    render={data => (\n      <div className=\"hero is-large\">\n    <div id=\"dashboard-card\" className=\"card\">\n      <div className=\"columns\">\n        {/*Left Menu */}\n        <div className=\"column is-narrow is-narrow-mobile is-hidden-mobile\">\n          <aside id=\"left-menu\" className=\"menu\">\n            <ul className=\"menu-list\">\n              <Link to=\"/news\">\n                <li>\n                  <span className=\"icon is-small\">\n                    <FontAwesomeIcon\n                      icon={'newspaper'}\n                      size={'lg'}\n                      color={'white'}\n                    />\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/podcasts\">\n                <li>\n                  <span className=\"icon is-small\">\n                    <FontAwesomeIcon\n                      icon={'podcast'}\n                      size={'lg'}\n                      color={'white'}\n                    />\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/youtube\">\n                <li>\n                  <span className=\"icon is-small\">\n                    <FontAwesomeIcon\n                      icon={'video'}\n                      size={'lg'}\n                      color={'white'}\n                    />\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/weather\">\n                <li>\n                  <span className=\"icon is-small\">\n                    <FontAwesomeIcon\n                      icon={'cloud-sun-rain'}\n                      size={'lg'}\n                      color={'white'}\n                    />\n                  </span>\n                </li>\n              </Link>\n              <Link to=\"/calendar\">\n                <li>\n                  <span className=\"icon is-small\">\n                    <FontAwesomeIcon\n                      icon={'calendar-alt'}\n                      size={'lg'}\n                      color={'white'}\n                    />\n                  </span>\n                </li>\n              </Link>\n            </ul>\n          </aside>\n        </div>\n\n        <div id=\"information-side\" className=\"column is-9\">\n          {/*WakaTime Top Column */}\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"card\" id=\"wakaTimeCard\">\n                WakaTime\n              </div>\n            </div>\n          </div>\n\n          {/*YouTube & Podcast Column */}\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"columns\">\n                <div className=\"column\">\n                <CarouselProvider\n                naturalSlideWidth={100}\n                naturalSlideHeight={50}\n                totalSlides={150}\n              >\n                <Slider>\n                {data.allYoutubeVideo.edges.map(\n                  (edge) => (\n                  <Slide index={0}>\n                      <Player \n                            \n                            videoId={edge.node.videoId}\n                            />\n                            \n                            \n                            </Slide>\n                            )\n                            )}\n                  \n                </Slider>\n                <ButtonBack>Last Video</ButtonBack>\n                <ButtonNext>Next Video</ButtonNext>\n              </CarouselProvider>\n                \n                </div>\n              </div>\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <div className=\"card\" id=\"api2Card\">\n                    API2\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Calendar Column */}\n            <div id=\"calendar-column\" className=\"column\">\n              <div id=\"calendar-card\">\n                <div className=\"card\" id=\"calendarCard\">\n                  <LoadableCalendar/>\n                      </div>\n                </div>\n              </div>\n            </div>\n        </div>\n\n        {/*Far Right Column */}\n        <div id=\"farRight\" className=\"column\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"card\" id=\"dateCard\">\n               <Date/>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\" />\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"card\" id=\"weatherCard\">\n                <WeatherDash/>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div id=\"data-card\" className=\"card\">\n                Data Here\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/*News Ticker Column */}\n      <div className=\"columns\">\n        <div className=\"column is-12\">\n          <div id=\"news-ticker-card\" className=\"card\">\n            <div className=\"card\" id=\"tickerCard\">\n              Ticker\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n    )}\n  />\n)\n\nexport default DashboardLayout\n","import React, { Component } from 'react'\nimport DashboardLayout from '../components/dashboard.js'\nimport './dashboard.css'\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div id=\"dashboard-bg\">\n        <DashboardLayout />\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nimport  \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\n\nconst Calendar = () => (\n    <FullCalendar \n    defaultView =\"dayGridMonth\"\n    header={{\n      left:\"prev\",\n      center:\"title\",\n      right:\"next\"\n    }}\n    plugins={[dayGridPlugin]}\n    contentHeight={350}\n    showNonCurrentDates={true}\n    />\n)\n\nexport default Calendar;\n\n"],"sourceRoot":""}